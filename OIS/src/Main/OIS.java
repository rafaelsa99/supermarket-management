
package Main;

import ActiveEntity.AECashier;
import ActiveEntity.AEControl;
import ActiveEntity.AECustomer;
import ActiveEntity.AEManager;
import Common.Configurations;
import Common.STCustomer;
import Communication.CClient;
import Communication.CServer;
import SACashier.ICashier_Cashier;
import SACashier.ICashier_Customer;
import SACashier.SACashier;
import SACorridor.ICorridor_Customer;
import SACorridor.SACorridor;
import SACorridorHall.ICorridorHall_Customer;
import SACorridorHall.SACorridorHall;
import SACustomer.SACustomer;
import SAOutsideHall.IOutsideHall_Customer;
import SAOutsideHall.SAOutsideHall;
import SACustomer.ICustomer_Customer;
import SAEntranceHall.IEntranceHall_Customer;
import SAEntranceHall.IEntranceHall_Manager;
import SAEntranceHall.SAEntranceHall;
import SAManager.IManager_Customer;
import SAManager.IManager_Manager;
import SAManager.SAManager;
import SAOutsideHall.IOutsideHall_Manager;
import SAPaymentBox.IPaymentBox_Cashier;
import SAPaymentBox.IPaymentBox_Customer;
import SAPaymentBox.SAPaymentBox;
import SAPaymentHall.IPaymentHall_Cashier;
import SAPaymentHall.IPaymentHall_Customer;
import SAPaymentHall.SAPaymentHall;
import java.awt.Color;
import java.awt.Component;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/*
 * @author Rafael Sá (104552), Luís Laranjeira (81526)
 */
public class OIS extends javax.swing.JFrame {
    
    static DefaultListModel model;
    CClient cclient;
    CServer cserver;


    /**
     * Creates new form OIS
     */
    public OIS(int serverPort) {
        initComponents();
        cserver = new CServer(serverPort);
        cserver.openServer();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jIdle = new javax.swing.JScrollPane();
        jListIdle = new javax.swing.JList<>();
        jOutsideHall = new javax.swing.JScrollPane();
        jListOutsideHall = new javax.swing.JList();
        jEntranceHall = new javax.swing.JScrollPane();
        jListEntranceHall = new javax.swing.JList();
        jCorridorHall1 = new javax.swing.JScrollPane();
        jListCorridorHall1 = new javax.swing.JList<>();
        jCorridorHall2 = new javax.swing.JScrollPane();
        jListCorridorHall2 = new javax.swing.JList<>();
        jCorridorHall3 = new javax.swing.JScrollPane();
        jListCorridorHall3 = new javax.swing.JList<>();
        jPaymentHall = new javax.swing.JScrollPane();
        jListPaymentHall = new javax.swing.JList<>();
        jPaymentBox = new javax.swing.JScrollPane();
        jListPaymentBox = new javax.swing.JList<>();
        jLabelOutsideHall = new javax.swing.JLabel();
        jLabelEntranceHall = new javax.swing.JLabel();
        jLabelCorridorHall = new javax.swing.JLabel();
        jLabelCorridor = new javax.swing.JLabel();
        jLabelPaymentHall = new javax.swing.JLabel();
        jLabelPaymentBox = new javax.swing.JLabel();
        jButtonConnect = new javax.swing.JButton();
        jPortInput = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jHostInput = new javax.swing.JTextField();
        jLabelHost = new javax.swing.JLabel();
        jLabelConnectionStatus = new javax.swing.JLabel();
        jCorridor20 = new javax.swing.JScrollPane();
        jListCorridor20 = new javax.swing.JList<>();
        jCorridor21 = new javax.swing.JScrollPane();
        jListCorridor21 = new javax.swing.JList<>();
        jCorridor22 = new javax.swing.JScrollPane();
        jListCorridor22 = new javax.swing.JList<>();
        jCorridor23 = new javax.swing.JScrollPane();
        jListCorridor23 = new javax.swing.JList<>();
        jCorridor24 = new javax.swing.JScrollPane();
        jListCorridor24 = new javax.swing.JList<>();
        jCorridor25 = new javax.swing.JScrollPane();
        jListCorridor25 = new javax.swing.JList<>();
        jCorridor26 = new javax.swing.JScrollPane();
        jListCorridor26 = new javax.swing.JList<>();
        jCorridor27 = new javax.swing.JScrollPane();
        jListCorridor27 = new javax.swing.JList<>();
        jCorridor28 = new javax.swing.JScrollPane();
        jListCorridor28 = new javax.swing.JList<>();
        jCorridor29 = new javax.swing.JScrollPane();
        jListCorridor29 = new javax.swing.JList<>();
        jCorridor10 = new javax.swing.JScrollPane();
        jListCorridor10 = new javax.swing.JList<>();
        jCorridor11 = new javax.swing.JScrollPane();
        jListCorridor11 = new javax.swing.JList<>();
        jCorridor12 = new javax.swing.JScrollPane();
        jListCorridor12 = new javax.swing.JList<>();
        jCorridor13 = new javax.swing.JScrollPane();
        jListCorridor13 = new javax.swing.JList<>();
        jCorridor14 = new javax.swing.JScrollPane();
        jListCorridor14 = new javax.swing.JList<>();
        jCorridor15 = new javax.swing.JScrollPane();
        jListCorridor15 = new javax.swing.JList<>();
        jCorridor16 = new javax.swing.JScrollPane();
        jListCorridor16 = new javax.swing.JList<>();
        jCorridor17 = new javax.swing.JScrollPane();
        jListCorridor17 = new javax.swing.JList<>();
        jCorridor18 = new javax.swing.JScrollPane();
        jListCorridor18 = new javax.swing.JList<>();
        jCorridor19 = new javax.swing.JScrollPane();
        jListCorridor19 = new javax.swing.JList<>();
        jCorridor30 = new javax.swing.JScrollPane();
        jListCorridor30 = new javax.swing.JList<>();
        jCorridor31 = new javax.swing.JScrollPane();
        jListCorridor31 = new javax.swing.JList<>();
        jCorridor32 = new javax.swing.JScrollPane();
        jListCorridor32 = new javax.swing.JList<>();
        jCorridor33 = new javax.swing.JScrollPane();
        jListCorridor33 = new javax.swing.JList<>();
        jCorridor34 = new javax.swing.JScrollPane();
        jListCorridor34 = new javax.swing.JList<>();
        jCorridor35 = new javax.swing.JScrollPane();
        jListCorridor35 = new javax.swing.JList<>();
        jCorridor36 = new javax.swing.JScrollPane();
        jListCorridor36 = new javax.swing.JList<>();
        jCorridor37 = new javax.swing.JScrollPane();
        jListCorridor37 = new javax.swing.JList<>();
        jCorridor38 = new javax.swing.JScrollPane();
        jListCorridor38 = new javax.swing.JList<>();
        jCorridor39 = new javax.swing.JScrollPane();
        jListCorridor39 = new javax.swing.JList<>();
        jLabelEntranceHall1 = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListIdle.setCellRenderer(new ListItemRenderer());
        jListIdle.setModel(new javax.swing.DefaultListModel());
        jListIdle.setVisibleRowCount(2);
        jIdle.setViewportView(jListIdle);

        jListOutsideHall.setCellRenderer(new ListItemRenderer());
        jListOutsideHall.setModel(new javax.swing.DefaultListModel());
        jOutsideHall.setViewportView(jListOutsideHall);

        jListEntranceHall.setCellRenderer(new ListItemRenderer());
        jListEntranceHall.setModel(new javax.swing.DefaultListModel());
        jEntranceHall.setViewportView(jListEntranceHall);

        jListCorridorHall1.setCellRenderer(new ListItemRenderer());
        jListCorridorHall1.setModel(new javax.swing.DefaultListModel());
        jCorridorHall1.setViewportView(jListCorridorHall1);

        jListCorridorHall2.setCellRenderer(new ListItemRenderer());
        jListCorridorHall2.setModel(new javax.swing.DefaultListModel());
        jCorridorHall2.setViewportView(jListCorridorHall2);

        jListCorridorHall3.setCellRenderer(new ListItemRenderer());
        jListCorridorHall3.setModel(new javax.swing.DefaultListModel());
        jCorridorHall3.setViewportView(jListCorridorHall3);

        jListPaymentHall.setCellRenderer(new ListItemRenderer());
        jListPaymentHall.setModel(new javax.swing.DefaultListModel());
        jPaymentHall.setViewportView(jListPaymentHall);

        jListPaymentBox.setCellRenderer(new ListItemRenderer());
        jListPaymentBox.setModel(new javax.swing.DefaultListModel());
        jPaymentBox.setViewportView(jListPaymentBox);

        jLabelOutsideHall.setText("Outside Hall");

        jLabelEntranceHall.setText("Entrance Hall");

        jLabelCorridorHall.setText("Corridor Hall");

        jLabelCorridor.setText("Corridor");

        jLabelPaymentHall.setText("Payment Hall");

        jLabelPaymentBox.setText("Payment Box");

        jButtonConnect.setText("Connect");
        jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectActionPerformed(evt);
            }
        });

        jPortInput.setText("6666");

        jLabelPort.setText("Port");

        jHostInput.setText("localhost");

        jLabelHost.setText("Host");

        jLabelConnectionStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jListCorridor20.setCellRenderer(new ListItemRenderer());
        jListCorridor20.setModel(new javax.swing.DefaultListModel());
        jCorridor20.setViewportView(jListCorridor20);

        jListCorridor21.setCellRenderer(new ListItemRenderer());
        jListCorridor21.setModel(new javax.swing.DefaultListModel());
        jCorridor21.setViewportView(jListCorridor21);

        jListCorridor22.setCellRenderer(new ListItemRenderer());
        jListCorridor22.setModel(new javax.swing.DefaultListModel());
        jCorridor22.setViewportView(jListCorridor22);

        jListCorridor23.setCellRenderer(new ListItemRenderer());
        jListCorridor23.setModel(new javax.swing.DefaultListModel());
        jCorridor23.setViewportView(jListCorridor23);

        jListCorridor24.setCellRenderer(new ListItemRenderer());
        jListCorridor24.setModel(new javax.swing.DefaultListModel());
        jCorridor24.setViewportView(jListCorridor24);

        jListCorridor25.setCellRenderer(new ListItemRenderer());
        jListCorridor25.setModel(new javax.swing.DefaultListModel());
        jCorridor25.setViewportView(jListCorridor25);

        jListCorridor26.setCellRenderer(new ListItemRenderer());
        jListCorridor26.setModel(new javax.swing.DefaultListModel());
        jCorridor26.setViewportView(jListCorridor26);

        jListCorridor27.setCellRenderer(new ListItemRenderer());
        jListCorridor27.setModel(new javax.swing.DefaultListModel());
        jCorridor27.setViewportView(jListCorridor27);

        jListCorridor28.setCellRenderer(new ListItemRenderer());
        jListCorridor28.setModel(new javax.swing.DefaultListModel());
        jCorridor28.setViewportView(jListCorridor28);

        jListCorridor29.setCellRenderer(new ListItemRenderer());
        jListCorridor29.setModel(new javax.swing.DefaultListModel());
        jCorridor29.setViewportView(jListCorridor29);

        jListCorridor10.setCellRenderer(new ListItemRenderer());
        jListCorridor10.setModel(new javax.swing.DefaultListModel());
        jCorridor10.setViewportView(jListCorridor10);

        jListCorridor11.setCellRenderer(new ListItemRenderer());
        jListCorridor11.setModel(new javax.swing.DefaultListModel());
        jCorridor11.setViewportView(jListCorridor11);

        jListCorridor12.setCellRenderer(new ListItemRenderer());
        jListCorridor12.setModel(new javax.swing.DefaultListModel());
        jCorridor12.setViewportView(jListCorridor12);

        jListCorridor13.setCellRenderer(new ListItemRenderer());
        jListCorridor13.setModel(new javax.swing.DefaultListModel());
        jCorridor13.setViewportView(jListCorridor13);

        jListCorridor14.setCellRenderer(new ListItemRenderer());
        jListCorridor14.setModel(new javax.swing.DefaultListModel());
        jCorridor14.setViewportView(jListCorridor14);

        jListCorridor15.setCellRenderer(new ListItemRenderer());
        jListCorridor15.setModel(new javax.swing.DefaultListModel());
        jCorridor15.setViewportView(jListCorridor15);

        jListCorridor16.setCellRenderer(new ListItemRenderer());
        jListCorridor16.setModel(new javax.swing.DefaultListModel());
        jCorridor16.setViewportView(jListCorridor16);

        jListCorridor17.setCellRenderer(new ListItemRenderer());
        jListCorridor17.setModel(new javax.swing.DefaultListModel());
        jCorridor17.setViewportView(jListCorridor17);

        jListCorridor18.setCellRenderer(new ListItemRenderer());
        jListCorridor18.setModel(new javax.swing.DefaultListModel());
        jCorridor18.setViewportView(jListCorridor18);

        jListCorridor19.setCellRenderer(new ListItemRenderer());
        jListCorridor19.setModel(new javax.swing.DefaultListModel());
        jCorridor19.setViewportView(jListCorridor19);

        jListCorridor30.setCellRenderer(new ListItemRenderer());
        jListCorridor30.setModel(new javax.swing.DefaultListModel());
        jCorridor30.setViewportView(jListCorridor30);

        jListCorridor31.setCellRenderer(new ListItemRenderer());
        jListCorridor31.setModel(new javax.swing.DefaultListModel());
        jCorridor31.setViewportView(jListCorridor31);

        jListCorridor32.setCellRenderer(new ListItemRenderer());
        jListCorridor32.setModel(new javax.swing.DefaultListModel());
        jCorridor32.setViewportView(jListCorridor32);

        jListCorridor33.setCellRenderer(new ListItemRenderer());
        jListCorridor33.setModel(new javax.swing.DefaultListModel());
        jCorridor33.setViewportView(jListCorridor33);

        jListCorridor34.setCellRenderer(new ListItemRenderer());
        jListCorridor34.setModel(new javax.swing.DefaultListModel());
        jCorridor34.setViewportView(jListCorridor34);

        jListCorridor35.setCellRenderer(new ListItemRenderer());
        jListCorridor35.setModel(new javax.swing.DefaultListModel());
        jCorridor35.setViewportView(jListCorridor35);

        jListCorridor36.setCellRenderer(new ListItemRenderer());
        jListCorridor36.setModel(new javax.swing.DefaultListModel());
        jCorridor36.setViewportView(jListCorridor36);

        jListCorridor37.setCellRenderer(new ListItemRenderer());
        jListCorridor37.setModel(new javax.swing.DefaultListModel());
        jCorridor37.setViewportView(jListCorridor37);

        jListCorridor20.setCellRenderer(new ListItemRenderer());
        jListCorridor38.setModel(new javax.swing.DefaultListModel());
        jCorridor38.setViewportView(jListCorridor38);

        jListCorridor20.setCellRenderer(new ListItemRenderer());
        jListCorridor39.setModel(new javax.swing.DefaultListModel());
        jCorridor39.setViewportView(jListCorridor39);

        jLabelEntranceHall1.setText("Idle");

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelTitle.setText("OIS Supermarket");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelEntranceHall1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jOutsideHall, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabelOutsideHall)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jEntranceHall, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabelEntranceHall))))
                            .addComponent(jIdle, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelCorridorHall)
                                .addGap(243, 243, 243)
                                .addComponent(jLabelCorridor))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCorridorHall2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridorHall1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridorHall3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(114, 114, 114)
                                        .addComponent(jLabelTitle)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabelHost)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jHostInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jLabelPort)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPortInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(250, 250, 250)
                                                .addComponent(jLabelConnectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButtonConnect))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jCorridor30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor32, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor33, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor34, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor35, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor37, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCorridor39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCorridor11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCorridor21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jCorridor22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCorridor12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jCorridor23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCorridor13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jCorridor24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jCorridor14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCorridor16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCorridor26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCorridor18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCorridor19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jCorridor27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCorridor28, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jCorridor29, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPaymentHall, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabelPaymentHall)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPaymentBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabelPaymentBox)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPort)
                            .addComponent(jPortInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jHostInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelHost))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelConnectionStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPaymentHall, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPaymentBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelPaymentBox)
                            .addComponent(jLabelPaymentHall))
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabelEntranceHall1)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCorridorHall1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor13, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor14, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor15, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor16, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor17, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor18, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor19, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCorridor29, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor21, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor22, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor23, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor24, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor25, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor26, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor27, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor28, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor20, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridorHall2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCorridorHall3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor30, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor32, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor33, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor34, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor35, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor36, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor37, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor38, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCorridor39, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jIdle, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jEntranceHall, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jOutsideHall, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOutsideHall)
                    .addComponent(jLabelEntranceHall)
                    .addComponent(jLabelCorridorHall)
                    .addComponent(jLabelCorridor))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {
        this.cclient = new CClient(jHostInput.getText(), Integer.parseInt(jPortInput.getText()));
        if(this.cclient.openServer()){
            jButtonConnect.setEnabled(false);
            jLabelConnectionStatus.setText("Connected!");
            runOIS();
        }else{
            jLabelConnectionStatus.setText("Failed to Connect!"); 
        }   
    }
    
    //Return da posição onde foi inserido o cliente
    public static int appendCostumerToInterface(JList list, int idCostumer){
        model = (DefaultListModel)list.getModel();
        ImageIcon image = new javax.swing.ImageIcon(OIS.class.getResource("/Assets/customer_50x50.png")); // NOI18N
        JLabel label = new JLabel();
        label.setIcon(image);
        label.setText(String.valueOf(idCostumer));
        model.addElement(label);
        return model.size() - 1;
    }
    
    public static int appendManagerToInterface(JList list){
        model = (DefaultListModel)list.getModel();
        ImageIcon image = new javax.swing.ImageIcon(OIS.class.getResource("/Assets/manager_50x50.png")); // NOI18N
        JLabel label = new JLabel();
        label.setIcon(image);
        label.setText("M");
        model.addElement(label);
        return model.size() - 1;
    }
    
    public static int appendCashierToInterface(JList list){
        model = (DefaultListModel)list.getModel();
        ImageIcon image = new javax.swing.ImageIcon(OIS.class.getResource("/Assets/cashier_50x50.png")); // NOI18N
        JLabel label = new JLabel();
        label.setIcon(image);
        label.setText("C");
        model.addElement(label);
        return model.size() - 1;
    }
    
    //A interface cria uma linha para cada movimento, é preciso manter o track, isto é em que linha está um dado customer(id)
    public static int moveCostumer(JList previous, JList next, int previousIndex, int idCostumer){
        removeCustomerFromInterface(previous, previousIndex);
        return appendCostumerToInterface(next, idCostumer);
    }
    
    public static int moveManager(JList previous, JList next, int previousIndex){
        removeManagerFromInterface(previous, previousIndex);
        return appendManagerToInterface(next);
    }
        
    public static int moveCashier(JList previous, JList next, int previousIndex){
        removeCashierFromInterface(previous, previousIndex);
        return appendCashierToInterface(next);
    }
    
    public static void removeCashierFromInterface(JList list, int index){
        model = (DefaultListModel)list.getModel();
        model.remove(index);
    }
    
    public static void removeCustomerFromInterface(JList list, int index){
        model = (DefaultListModel)list.getModel();
        model.remove(index);
    }
        
    public static void removeManagerFromInterface(JList list, int index){
        model = (DefaultListModel)list.getModel();
        model.remove(index);
    }
    
    class ListItemRenderer extends DefaultListCellRenderer {
        private static final long serialVersionUID = -7799441088157759804L;
        private JLabel label;
        private Color textSelectionColor = Color.BLACK;
        private Color backgroundSelectionColor = Color.CYAN;
        private Color textNonSelectionColor = Color.BLACK;
        private Color backgroundNonSelectionColor = Color.WHITE;

        ListItemRenderer() {
            label = new JLabel();
            label.setOpaque(true);
        }

        @Override
        public Component getListCellRendererComponent(
                JList list,
                Object value,
                int index,
                boolean selected,
                boolean expanded) {

            JLabel input = (JLabel)value;
            label.setHorizontalAlignment(JLabel.CENTER);
            label.setIcon(input.getIcon());
            label.setText(input.getText());
            label.setToolTipText("");

            if (selected) {
                label.setBackground(backgroundSelectionColor);
                label.setForeground(textSelectionColor);
            } else {
                label.setBackground(backgroundNonSelectionColor);
                label.setForeground(textNonSelectionColor);
            }

            return label;
        }
        
    }
    
    public void runOIS(){
        final STCustomer[] corridorNumbers = {STCustomer.CORRIDOR_1, 
                                     STCustomer.CORRIDOR_2, 
                                     STCustomer.CORRIDOR_3};
        final SACustomer saCustomer = new SACustomer(Configurations.MAX_CUSTOMERS);
        final SAManager saManager = new SAManager(Configurations.N_CORRIDOR, 
                                                  Configurations.SIZE_ENTRANCE_HALL, 
                                                  Configurations.SIZE_CORRIDOR_HALL,
                                                  Configurations.TIMEOUT_AUTHORIZATION);
        final SACashier saCashier = new SACashier(Configurations.SIZE_PAYMENT_HALL);
        final SAOutsideHall saOutsideHall = new SAOutsideHall(Configurations.MAX_CUSTOMERS);
        final SAEntranceHall saEntranceHall = new SAEntranceHall(Configurations.SIZE_ENTRANCE_HALL);
        final SACorridorHall[] saCorridorHall = new SACorridorHall[Configurations.N_CORRIDOR];
        final SACorridor[] saCorridor = new SACorridor[Configurations.N_CORRIDOR];
        for (int i = 0; i < Configurations.N_CORRIDOR; i++) {
            saCorridorHall[i] = new SACorridorHall(Configurations.SIZE_CORRIDOR_HALL, corridorNumbers[i], Configurations.SIZE_CORRIDOR);
            saCorridor[i] = new SACorridor(Configurations.SIZE_CORRIDOR, Configurations.SIZE_PAYMENT_HALL,
                                           Configurations.CORRIDOR_STEPS, Configurations.TIMEOUT_MOVEMENT, 
                                           Configurations.N_CORRIDOR, corridorNumbers[i], Configurations.MAX_CUSTOMERS);
        }
        final SAPaymentHall saPaymentHall = new SAPaymentHall(Configurations.SIZE_PAYMENT_HALL);
        final SAPaymentBox sAPaymentBox = new SAPaymentBox(Configurations.TIMEOUT_PAYMENT);

        final AECustomer[] aeCustomer = new AECustomer[Configurations.MAX_CUSTOMERS];
        for (int i = 0; i < Configurations.MAX_CUSTOMERS; i++) {
            aeCustomer[i] = new AECustomer(i, (ICustomer_Customer) saCustomer,
                    (IOutsideHall_Customer) saOutsideHall, (IEntranceHall_Customer) saEntranceHall,
                    (ICorridorHall_Customer[]) saCorridorHall, (ICorridor_Customer[]) saCorridor,
                    (IPaymentHall_Customer) saPaymentHall, (IPaymentBox_Customer) sAPaymentBox,
                    (ICashier_Customer) saCashier, (IManager_Customer) saManager, cclient);
            aeCustomer[i].start();
        }
        final AEManager aeManager = new AEManager((IManager_Manager) saManager, (IOutsideHall_Manager) saOutsideHall,
                                                   (IEntranceHall_Manager) saEntranceHall, cclient);
        aeManager.start();
        final AECashier aeCashier = new AECashier((IPaymentHall_Cashier) saPaymentHall, 
                                                  (ICashier_Cashier) saCashier,
                                                  (IPaymentBox_Cashier) sAPaymentBox, cclient);
        aeCashier.start();
        final AEControl aeControl = new AEControl(saCustomer, saManager, saCashier,
                                                  saOutsideHall, saEntranceHall, saCorridorHall, 
                                                  saCorridor, saPaymentHall, sAPaymentBox, cserver);
        aeControl.start();
        
        /*try {
            aeManager.join();
            aeCashier.join();
            for (int i = 0; i < Configurations.MAX_CUSTOMERS; i++) {
                aeCustomer[i].join();
            }
            aeControl.join();
        } catch (InterruptedException ex) {
            System.err.println(ex.toString());
        }
        System.out.println("MAIN: ALL ENDED");*/
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                int serverPort = Configurations.SERVER_PORT;
                if(args.length == 1){
                    try{
                        serverPort = Integer.parseInt(args[0]);
                    }catch (NumberFormatException ex){
                        System.out.println("Invalid parameter!\nParameters: [Optional: serverPort]\n");
                    }
                } else if (args.length > 1){
                    System.out.println("Invalid parameters!\nParameters: [Optional: serverPort]\n");
                }
                new OIS(serverPort);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton jButtonConnect;
    private javax.swing.JScrollPane jCorridor10;
    private javax.swing.JScrollPane jCorridor11;
    private javax.swing.JScrollPane jCorridor12;
    private javax.swing.JScrollPane jCorridor13;
    private javax.swing.JScrollPane jCorridor14;
    private javax.swing.JScrollPane jCorridor15;
    private javax.swing.JScrollPane jCorridor16;
    private javax.swing.JScrollPane jCorridor17;
    private javax.swing.JScrollPane jCorridor18;
    private javax.swing.JScrollPane jCorridor19;
    private javax.swing.JScrollPane jCorridor20;
    private javax.swing.JScrollPane jCorridor21;
    private javax.swing.JScrollPane jCorridor22;
    private javax.swing.JScrollPane jCorridor23;
    private javax.swing.JScrollPane jCorridor24;
    private javax.swing.JScrollPane jCorridor25;
    private javax.swing.JScrollPane jCorridor26;
    private javax.swing.JScrollPane jCorridor27;
    private javax.swing.JScrollPane jCorridor28;
    private javax.swing.JScrollPane jCorridor29;
    private javax.swing.JScrollPane jCorridor30;
    private javax.swing.JScrollPane jCorridor31;
    private javax.swing.JScrollPane jCorridor32;
    private javax.swing.JScrollPane jCorridor33;
    private javax.swing.JScrollPane jCorridor34;
    private javax.swing.JScrollPane jCorridor35;
    private javax.swing.JScrollPane jCorridor36;
    private javax.swing.JScrollPane jCorridor37;
    private javax.swing.JScrollPane jCorridor38;
    private javax.swing.JScrollPane jCorridor39;
    private javax.swing.JScrollPane jCorridorHall1;
    private javax.swing.JScrollPane jCorridorHall2;
    private javax.swing.JScrollPane jCorridorHall3;
    private javax.swing.JScrollPane jEntranceHall;
    private javax.swing.JTextField jHostInput;
    private javax.swing.JScrollPane jIdle;
    private javax.swing.JLabel jLabelConnectionStatus;
    private javax.swing.JLabel jLabelCorridor;
    private javax.swing.JLabel jLabelCorridorHall;
    private javax.swing.JLabel jLabelEntranceHall;
    private javax.swing.JLabel jLabelEntranceHall1;
    private javax.swing.JLabel jLabelHost;
    private javax.swing.JLabel jLabelOutsideHall;
    private javax.swing.JLabel jLabelPaymentBox;
    private javax.swing.JLabel jLabelPaymentHall;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelTitle;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor10;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor11;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor12;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor13;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor14;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor15;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor16;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor17;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor18;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor19;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor20;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor21;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor22;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor23;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor24;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor25;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor26;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor27;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor28;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor29;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor30;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor31;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor32;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor33;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor34;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor35;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor36;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor37;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor38;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridor39;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridorHall1;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridorHall2;
    private static javax.swing.JList<javax.swing.JLabel> jListCorridorHall3;
    public static javax.swing.JList jListEntranceHall;
    public static javax.swing.JList<javax.swing.JLabel> jListIdle;
    public static javax.swing.JList jListOutsideHall;
    public static javax.swing.JList<javax.swing.JLabel> jListPaymentBox;
    public static javax.swing.JList<javax.swing.JLabel> jListPaymentHall;
    private static javax.swing.JScrollPane jOutsideHall;
    private static javax.swing.JScrollPane jPaymentBox;
    private static javax.swing.JScrollPane jPaymentHall;
    private javax.swing.JTextField jPortInput;

    public static JList[][] corridor = new JList[][]{ { jListCorridor10, jListCorridor11, jListCorridor12, jListCorridor13, jListCorridor14, jListCorridor15, jListCorridor16, jListCorridor17, jListCorridor18, jListCorridor19},
                                                       { jListCorridor20, jListCorridor21, jListCorridor22, jListCorridor23, jListCorridor24, jListCorridor25, jListCorridor26, jListCorridor27, jListCorridor28, jListCorridor29},
                                                       { jListCorridor30, jListCorridor31, jListCorridor32, jListCorridor33, jListCorridor34, jListCorridor35, jListCorridor36, jListCorridor37, jListCorridor38, jListCorridor39}};
    public static JList[] corridoHall = new JList[]{ jListCorridorHall1, jListCorridorHall2, jListCorridorHall3};
    // End of variables declaration
}
